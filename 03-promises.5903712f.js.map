{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACNC,MAAO,QACPC,QAAS,IACTC,SAAU,kBAEhB,IAAMC,EAAO,CACXC,KAAOC,SAASC,cAAc,UAE5BC,EAAS,EAwBb,SAASC,EAAcN,EAAUO,GAE/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC9B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAEPH,EACFF,EAAQ,CAACT,WAAUO,UAGnBG,EAAO,CAACV,WAAUO,S,GAGnBA,E,IArCHN,EAAKC,KAAKa,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAMC,iBAMN,IAJA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAaC,OAAOJ,EAAMK,OACxBC,EAAYF,OAAOH,EAAKI,OAErBE,EAAI,EAAGA,EAAIL,EAAOG,MAAOE,GAAG,EAErCtB,EAAcD,EAAQmB,GAAYK,MAAK,SAAAC,G,IAAE9B,EAAQ8B,EAAR9B,SAAUO,EAAKuB,EAALvB,M,OACnDb,EAAAE,OAAOmC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAANzB,EAAM,M,IAC1D0B,OAAI,SAAAH,G,IAAE9B,EAAQ8B,EAAR9B,SAAUO,EAAKuB,EAALvB,M,OACnBb,EAAAE,OAAOsC,QAAQ,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAANzB,EAAM,M,IAE1DiB,GAAYG,EACZtB,GAAQ,EAGRA,EAAS,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// ? глобально прописал опции\nNotify.init({ \n      width: '300px',\n      timeout: 3000,\n      position: 'center-center',});\n\nconst refs = {\n  form : document.querySelector(\".form\")\n}\nlet number = 1;\nrefs.form.addEventListener(\"submit\", onSubmit)\n\nfunction onSubmit(event){\n  event.preventDefault()\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n\n  for (let i = 0; i < amount.value; i+=1) {\n    \n  createPromise(number, delayValue).then(({position, delay}) => \n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  .catch(({position, delay}) => \n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n\n  delayValue+=stepValue;\n  number+=1;\n  }\n  \n  number = 1;\n}\n\nfunction createPromise(position, delay) {\n\n  return new Promise ((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n\n  if (shouldResolve) {\n    resolve({position, delay})\n    \n  } else {\n    reject({position, delay});\n    \n  }\n}, delay);\n\n});\n}\n"],"names":["$h6c0i","parcelRequire","Notify","init","width","timeout","position","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$number","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.5903712f.js.map"}